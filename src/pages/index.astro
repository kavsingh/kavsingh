---
import { getCollection } from "astro:content";

import ContactLinks from "../components/contact-links.astro";
import Experience from "../components/experience.astro";
import Education from "../components/education.astro";
import Content from "../components/content.astro";
import { sortIds } from "../utils/sort";

const experienceCollection = (await getCollection("experience")).sort(sortIds);
const educationCollection = (await getCollection("education")).sort(sortIds);
const csp = import.meta.env.DEV
	? "default-src * 'unsafe-inline';"
	: "default-src 'none'; style-src 'self' 'unsafe-inline'; img-src 'self';";
---

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<title>CV - Kanwaljeet Singh</title>
		<meta
			name="description"
			content="Developer building for web and mobile in Berlin"
		/>
		<meta http-equiv="Content-Security-Policy" content={csp} />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1, maximum-scale=5, minimal-ui"
		/>
		<link rel="icon" type="image/png" href="/favicon.png" />
	</head>
	<body>
		<main class="max-w-[56rem] mx-auto grid print:max-w-none">
			<header>
				<h1>Kanwaljeet Singh</h1>
				<div>
					<h2>Web Developer</h2>
					<ContactLinks />
				</div>
			</header>
			<section aria-labelledby="about-title">
				<h2 id="about-title">
					<span role="img" aria-label="About">ðŸ‘‹</span>
				</h2>
				<Content>
					<p>
						Developer building for web and mobile in Berlin. I'm enthusiastic
						about learning new web technologies and using them to build rich
						user experiences.
					</p>
				</Content>
			</section>
			<section aria-labelledby="work-title">
				<h2 id="work-title">Work</h2>
				<div>
					{experienceCollection.map((entry) => <Experience entry={entry} />)}
				</div>
			</section>
			<section aria-labelledby="study-title">
				<h2 id="study-title">Study</h2>
				<div>
					{educationCollection.map((entry) => <Education entry={entry} />)}
				</div>
			</section>
		</main>
	</body>
</html>

<style is:global>
	@import "../styles/global.css";
</style>

<style>
	main {
		padding-block: var(--spacing-1);
		padding-inline: var(--spacing-1);
		grid-template-columns: 1fr;
		row-gap: var(--spacing-2);
	}

	header h1,
	header h2 {
		margin-block: 0 0.6em;
		padding: 0;
	}

	header h1 {
		color: var(--color-text-600);
		font-weight: 600;
		font-size: 1.4em;
	}

	header h2 {
		color: var(--color-text-300);
		font-weight: 400;
		font-size: 1.2em;
	}

	section > h2 {
		color: var(--color-text-600);
		font-weight: 600;
		font-size: 1.1em;
		margin-block: 0 1em;
	}

	section:first-of-type > h2 {
		font-size: 3.4rem;
		margin-block: 0 0.4em;
	}

	section:not(:first-of-type) > div {
		display: flex;
		flex-direction: column;
		gap: var(--spacing-2);
	}

	@media screen and (min-width: 36rem) {
		main {
			padding-block: var(--spacing-2);
			grid-template-columns: fit-content(30%) 1fr;
			row-gap: var(--spacing-3);
			column-gap: var(--spacing-2);
		}

		header,
		section {
			display: contents;
		}

		header {
			margin-block-end: var(--spacing-3);
		}
	}

	@media print {
		article {
			break-inside: avoid;
		}
	}
</style>
